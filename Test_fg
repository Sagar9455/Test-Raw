# === UDS Report Parser - Fully Updated with Improvements ===

import os
import re
import datetime
from collections import defaultdict
from html import escape

# === 1. Load Description Map ===
def load_description_map(txt_file_path):
    desc_map = {}
    with open(txt_file_path, "r", encoding="utf-8") as f:
        for line in f:
            line = line.strip()
            if not line or line.lower().startswith("#"):
                continue
            parts = line.split(",")
            if len(parts) < 5:
                continue
            tc_id = parts[0].strip()
            description = parts[1].strip()
            sid = parts[2].strip().replace("0x", "").upper()
            sub = parts[3].strip().replace("0x", "").upper()
            positive_response = parts[4].strip().replace("0x", "").upper()
            key = (sid, sub)
            value = (description, tc_id, positive_response)
            if key not in desc_map:
                desc_map[key] = []
            desc_map[key].append(value)
    return desc_map

# === 2. Description Matching With Fallback ===
def get_description(data_bytes):
    if not data_bytes or len(data_bytes) < 2:
        return "", "", ""

    sid_index = 2 if data_bytes[0].startswith("1") else 1
    if len(data_bytes) <= sid_index:
        return "", "", ""

    sid = data_bytes[sid_index].upper()

    for length in (3, 2, 1, 0):
        sub = ''.join(data_bytes[sid_index + 1: sid_index + 1 + length]).upper() if length > 0 else ""
        key = (sid, sub)
        if key in DESCRIPTION_MAP:
            used = getattr(get_description, "used_tc_ids", set())
            for desc, tc_id, expected_resp in DESCRIPTION_MAP[key]:
                if tc_id not in used:
                    used.add(tc_id)
                    setattr(get_description, "used_tc_ids", used)
                    return desc, tc_id, expected_resp
            return DESCRIPTION_MAP[key][0]

    # fallback if no match
    return f"SID={sid}", f"UNKNOWN_TC_{sid}", "7F"

# === 3. Status & NRC Matching ===
def get_failure_reason(nrc):
    reasons = {
        "10" : "generalReject",
        "11" : "serviceNotSupported",
        "12" : "subFunctionNotSupported",
        "13" : "incorrectMessageLengthOrInvalidFormat",
        "14" : "responseTooLong",
        "21" : "busyRepeatReques",
        "22" : "conditionsNotCorrect",
        "23" : "ISOSAEReserved",
        "24" : "requestSequenceError",
        "31" : "requestOutOfRange",
        "32" : "ISOSAEReserved",
        "33" : "securityAccessDenied",
        "34" : "ISOSAEReserved",
        "35" : "invalidKey",
        "36" : "exceedNumberOfAttempts",
        "37" : "requiredTimeDelayNotExpired",
        "70" : "uploadDownloadNotAccepted",
        "71" : "transferDataSuspended",
        "72" : "generalProgrammingFailure",
        "73" : "wrongBlockSequenceCounter",
        "78" : "requestCorrectlyReceived-ResponsePending",
        "7E" : "subFunctionNotSupportedInActiveSession",
        "7F" : "serviceNotSupportedInActiveSession",
        "80" : "ISOSAEReserved",
        "81" : "rpmTooHigh",
        "82" : "rpmTooLow",
        "83" : "engineIsRunning",
        "84" : "engineIsNotRunning",
        "85" : "engineRunTimeTooLow",
        "86" : "temperatureTooHigh",
        "87" : "temperatureTooLow",
        "88" : "vehicleSpeedTooHigh",
        "89" : "vehicleSpeedTooLow",
        "8A" : "throttle/PedalTooHigh",
        "8B" : "throttle/PedalTooLow",
        "8C" : "transmissionRangeNotInNeutral",
        "8D" : "transmissionRangeNotInGear",
        "8E" : "ISOSAEReserved",
        "8F" : "brakeSwitch(es)NotClosed (Brake Pedal not pressed or not applied)",
        "90" : "shifterLeverNotInPark",
        "91" : "torqueConverterClutchLocked",
        "92" : "voltageTooHigh",
        "93" : "voltageTooLow",
        "FF" : "ISOSAEReserved",
    }
    return reasons.get(nrc.upper(), f"Unknown NRC: {nrc}")

def get_status(data_bytes, expected_resp):
    if not data_bytes or len(data_bytes) < 3:
        return "Fail", "Incomplete response"

    actual_sid = data_bytes[2].upper() if data_bytes[0].upper() == "10" else data_bytes[1].upper()

    if actual_sid == "7F":
        if len(data_bytes) >= 4 and data_bytes[3].upper() == "78":
            return "Pending", ""
        nrc = data_bytes[3].upper()
        if nrc == expected_resp:
            return "Pass", ""
        else:
            return "Fail", get_failure_reason(nrc)

    if actual_sid == expected_resp:
        return "Pass", ""

    return "Fail", f"Unexpected response: {actual_sid}"

# === 4. Parse Log Lines ===
def parse_data_bytes(line):
    match = re.search(r'd\s+\d+\s+((?:[0-9A-Fa-f]{2}\s+)+)', line)
    if match:
        return match.group(1).strip().split()
    return []

def parse_line(line):
    line = line.strip()
    if not line or " d " not in line:
        return None
    parts = line.split()
    try:
        timestamp = float(parts[0])
    except:
        return None
    can_id = parts[2].upper()
    direction = parts[3]
    data_bytes = parse_data_bytes(line)
    return {
        "timestamp": timestamp,
        "can_id": can_id,
        "direction": direction,
        "data_bytes": data_bytes,
        "raw": line
    }

# === 5. Parse ASC Log ===
def parse_asc_file(asc_file_path, allowed_tx_ids, allowed_rx_ids):
    messages_by_tc = defaultdict(list)
    current_request = None
    start_ts, end_ts = None, None
    skip_next_fc = False
    pending_flag = False
    rx_multi_response_pending = False
    rx_multi_response_first = None

    allowed_tx_ids = set(f"{id:X}" for id in allowed_tx_ids)
    allowed_rx_ids = set(f"{id:X}" for id in allowed_rx_ids)

    with open(asc_file_path, "r", encoding="utf-8", errors="ignore") as f:
        for line in f:
            line = line.strip()
            if not line or not re.match(r"^\d+\.\d+", line):
                continue
            msg = parse_line(line)
            if not msg:
                continue

            can_id = msg["can_id"].upper()
            direction = msg["direction"]
            data_bytes = msg["data_bytes"]

            if direction == "Tx" and can_id in allowed_tx_ids:
                if data_bytes and data_bytes[0].upper() == "10":
                    skip_next_fc = True
                desc, tc_id, expected_resp = get_description(data_bytes)
                if desc and tc_id:
                    current_request = {
                        "timestamp": msg["timestamp"],
                        "can_id": can_id,
                        "direction": direction,
                        "data_bytes": data_bytes,
                        "desc": desc,
                        "tc_id": tc_id,
                        "expected_resp": expected_resp,
                        "status": "Pending"
                    }

            elif direction == "Rx" and can_id in allowed_rx_ids:
                if skip_next_fc and data_bytes and data_bytes[0].upper() == "30":
                    skip_next_fc = False
                    continue

                # Handle response pending (0x7F .. 78)
                if data_bytes and len(data_bytes) >= 4 and data_bytes[1].upper() == "7F" and data_bytes[3].upper() == "78":
                    pending_flag = True
                    continue

                # Handle multi-frame Rx: 0x10 + 0x21
                if data_bytes and data_bytes[0].upper() == "10":
                    rx_multi_response_first = msg
                    rx_multi_response_pending = True
                    continue

                if rx_multi_response_pending and data_bytes and data_bytes[0].upper() == "21":
                    combined_bytes = rx_multi_response_first["data_bytes"][:7] + data_bytes[1:]
                    rx_msg = {
                        "timestamp": rx_multi_response_first["timestamp"],
                        "can_id": rx_multi_response_first["can_id"],
                        "direction": rx_multi_response_first["direction"],
                        "data_bytes": combined_bytes
                    }
                    if current_request:
                        status, reason = get_status(combined_bytes, current_request.get("expected_resp", ""))
                        current_request.update({
                            "response": rx_msg,
                            "status": status,
                            "failure_reason": reason
                        })
                        messages_by_tc[current_request["tc_id"]].append(current_request)

                        req_ts = current_request["timestamp"]
                        res_ts = rx_msg["timestamp"]
                        start_ts = min(start_ts or req_ts, req_ts)
                        end_ts = max(end_ts or res_ts, res_ts)

                        current_request = None

                    rx_multi_response_pending = False
                    rx_multi_response_first = None
                    continue

                # If response was pending, now handle actual response
                if pending_flag:
                    if current_request:
                        status, reason = get_status(data_bytes, current_request.get("expected_resp", ""))
                        current_request.update({
                            "response": msg,
                            "status": status,
                            "failure_reason": reason
                        })
                        messages_by_tc[current_request["tc_id"]].append(current_request)

                        req_ts = current_request["timestamp"]
                        res_ts = msg["timestamp"]
                        start_ts = min(start_ts or req_ts, req_ts)
                        end_ts = max(end_ts or res_ts, res_ts)

                        current_request = None
                    pending_flag = False
                    continue

                # Regular Rx response
                if current_request:
                    status, reason = get_status(data_bytes, current_request.get("expected_resp", ""))
                    current_request.update({
                        "response": msg,
                        "status": status,
                        "failure_reason": reason
                    })
                    messages_by_tc[current_request["tc_id"]].append(current_request)

                    req_ts = current_request["timestamp"]
                    res_ts = msg["timestamp"]
                    start_ts = min(start_ts or req_ts, req_ts)
                    end_ts = max(end_ts or res_ts, res_ts)

                    current_request = None

      # End of log reached — handle if a request was sent but no response was ever received
    if current_request:
      current_request.update({
        "status": "Fail",
        "failure_reason": "No response received"
       })
      messages_by_tc[current_request["tc_id"]].append(current_request)

    
    return messages_by_tc, start_ts or 0, end_ts or 0




def generate_html_report(messages_by_tc, output_path, asc_filename, start_ts, end_ts, ecu_info_data=None, target_ecu=None):
    total = len(messages_by_tc)
    passed = sum(1 for tc in messages_by_tc.values() if all(msg["status"] == "Pass" for msg in tc))
    failed = total - passed
    duration = end_ts - start_ts
    generated_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    html = f"""<!DOCTYPE html>
<html>
<head><title>UDS Diagnostic Report</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
  body {{ font-family: Arial; margin: 20px; }}
  .pass {{ color: green; font-weight: bold; }}
  .fail {{ color: red; font-weight: bold; }}
  .wrapper {{
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 50px;
    margin-top: 20px;
  }}
  .summary-block {{ text-align: left; min-width: 250px; }}
  #chart-container {{ width: 300px; }}
  table {{ border-collapse: collapse; width: 100%; margin-top: 10px; }}
  th, td {{ border: 1px solid #ccc; padding: 8px; }}
  th {{ background: #f0f0f0; }}
  summary {{ font-weight: bold; cursor: pointer; }}
</style>
</head>
<body>

<h1 style="text-align: center;">UDS Diagnostic Report</h1>

<div style="display: flex; justify-content: flex-start; align-items: flex-start; gap: 40px; margin-top: 20px; padding-left: 10px;">
    <div style="width: 650px;">
    
        {f"<p><strong>Target ECU:</strong> {escape(target_ecu)}</p>" if target_ecu else ""}
        {"".join(f"<p><strong>{escape(k)}:</strong> {escape(v)}</p>" for k, v in ecu_info_data.items()) if ecu_info_data else ""}
        
        <hr style="width: 300px;border:1px solid #999; margin:25px 0;">
        
        <p><strong>Generated:</strong> {generated_time}</p>
        <p><strong>CAN Log File:</strong> {asc_filename}</p>
        <p><strong>Total Test Cases:</strong> {total}</p>
        <p class="pass"><strong>Passed:</strong> {passed}</p>
        <p class="fail"><strong>Failed:</strong> {failed}</p>
        <p><strong>Test Duration:</strong> {duration:.3f} seconds</p>
        
    </div>

    <div id="chart-container" style="width: 320px; margin-left:70px;">
        <canvas id="passFailChart" width="300" height="300"></canvas>
    </div>
</div>


<script>
  const ctx = document.getElementById('passFailChart').getContext('2d');
  new Chart(ctx, {{
    type: 'pie',
    data: {{
      labels: ['Passed', 'Failed'],
      datasets: [{{
        data: [{passed}, {failed}],
        backgroundColor: ['#4CAF50', '#F44336']
      }}]
    }},
    options: {{
      responsive: true,
      plugins: {{
        legend: {{ position: 'bottom' }},
        title: {{ display: true, text: 'Test Case Results' }}
      }}
    }}
  }});
</script>

<hr><br>
"""

    for tc_id, steps in messages_by_tc.items():
        status = steps[0]['status']
        status_class = 'pass' if status == 'Pass' else 'fail'
        html += f"<details><summary>{tc_id} - <span class='{status_class}'>{status}</span></summary>\n"
        html += """<table><tr><th>Step</th><th>Description</th><th>Timestamp</th><th>Type</th><th>Status</th><th>Failure Reason</th></tr>\n"""
        
        step_count = 1
        for msg in steps:
            desc = msg['desc']
            combined_desc = ""
	    
            # Case 1: PreCondition and Testcase
            if "PreCondition:" in desc and "Testcase" in desc:
                parts = desc.split("PreCondition:", 1)[1].split("Testcase", 1)
                pre_detail = parts[0].strip()
                tc_detail = parts[1].strip()
                combined_desc = f"<b>PreCondition:</b> {escape(pre_detail)}<br><b>Testcase:</b>{escape(tc_detail)}"
	    
            # Case 2: Only PreCondition
            elif "PreCondition:" in desc:
                pre_detail = desc.split("PreCondition:", 1)[1].strip()
                combined_desc = f"<b>PreCondition:</b> {escape(pre_detail)}"
	    
            # Case 3: Only Testcase or any other
            else:
                combined_desc = escape(desc.strip())
	    
            # Request row
            html += f"<tr><td>{step_count}</td><td>{combined_desc}</td><td>{msg['timestamp']:.6f}</td><td>Request Sent</td><td></td><td>-</td></tr>\n"
            step_count += 1
	    
            # Response row
            response = msg.get("response", {})
            html += f"<tr><td>{step_count}</td><td></td><td>{response.get('timestamp', ''):.6f}</td><td>Response Received</td><td>{msg['status']}</td><td>{msg.get('failure_reason', '')}</td></tr>\n"
            step_count += 1
	    
        html += "</table></details>\n"
        
    html += "</body></html>"
    
    with open(output_path, "w", encoding="utf-8") as f:
         f.write(html)
    
    print(f"UDS HTML Report generated at:\n{output_path}\n")

def generate_report(asc_file_path, txt_file_path, output_html_file, allowed_tx_ids, allowed_rx_ids, ecu_info_data=None, target_ecu=None):
    global DESCRIPTION_MAP
    DESCRIPTION_MAP = load_description_map(txt_file_path)
    get_description.used_tc_ids = set()

    messages_by_tc, start_ts, end_ts = parse_asc_file(
        asc_file_path, allowed_tx_ids, allowed_rx_ids
    )

    report_path = output_html_file

    generate_html_report(
        messages_by_tc,
        report_path,
        os.path.basename(asc_file_path),
        start_ts,
        end_ts,
        ecu_info_data,
        target_ecu
    )



#TC_ID/PC_ID , Testcase_Description, Service_ID, SubService_ID, Expected_Response_Data, Write_Data, Addressing
ECU_INFO-1 , S/W Version,0x22,0xF1DD,0x62,  ,Physical
ECU_INFO-2 , B-CAN Version,0x22,0xF100,0x62,  ,Physical
ECU_INFO-3 , Manufacturing Date,0x22,0xF18B,0x62,  ,Physical
ECU_INFO-4 , ECU_Serial Number,0x22,0xF18C,0x62,  ,Physical
ECU_INFO-5 , H/W Version,0x22,0xF193,0x62,  ,Physical
TC_ID-001 , Start default session,0x10,0x01,0x50,  ,Physical
TC_ID-003 , Start Extended session,0x10,0x03,0x50,  ,Physical
TC_ID-004 , Sub function not supported(10 FF),0x10,0xFF,0x12,  ,Physical
TC_ID-005 , Incorrect message length(No sub function)(10),0x10,  ,0x13,  ,Physical
TC_ID-007 , Hard reset,0x11,0x01,0x51,  ,Physical
TC_ID-008 , Soft reset,0x11,0x03,0x51,  ,Physical
TC_ID-009 , Sub function not supported(out ofrange)(11 08) ,0x11,0x08,0x12,  ,Physical
TC_ID-010 , Incorrect message length(No sub function),0x11,  ,0x13,  ,Physical
PC_ID-001 , Start Extended session,0x10,0x03,0x50,  ,Physical
TC_ID-013 , PreCondition: PC_ID-001  Disable Rx and Tx,0x28,0x00,0x68,  ,Functional
TC_ID-014 , PreCondition: PC_ID-001  EnableRxAndDisableTx Extended session(28 01) ,0x28,0x01,0x68,  ,Functional
TC_ID-015 , PreCondition: PC_ID-001  DisableRxAndEnableTx Extended session(28 02) ,0x28,0x02,0x68,  ,Functional
TC_ID-016 , PreCondition: PC_ID-001  DisableRxAndDisableTx Extended session(28 03) ,0x28,0x03,0x68,  ,Functional
TC_ID-018 , Subfunction not supported,0x28,0x08,0x12,  ,Functional
PC_ID-002 , Start Default session,0x10,0x01,0x50,  ,Physical
TC_ID-022 , incorrect message length(No sub function) with Default session,0x85,  ,0x7F,  ,Physical
TC_ID-023 , PreCondition: PC_ID-002  TestcaseP:DTC setting ON wrong Pre-condition (85 01),0x85,0x01,0x7F,  ,Physical
TC_ID-024 , PreCondition: PC_ID-002  Testcase:DTC setting OFF wrong Pre-condition(85 02) ,0x85,0x02,0x7F,  ,Physical
TC_ID-025 , PreCondition: PC_ID-002  Testcase:Service not supported in active session(not valid sub function),0x85,0xFF,0x7F,  ,Physical
PC_ID-003 , Start Extended session,0x10,0x03,0x50,  ,Physical
TC_ID-027 , Incorrect message length(No sub function) with Extended session,0x85,  ,0x13,  ,Physical
TC_ID-028 , PreCondition: PC_ID-003  Testcase:DTC setting ON  Pre-condition extended(85 01),0x85,0x01,0xC5,  ,Physical
TC_ID-029 , PreCondition: PC_ID-003  Testcase:DTC setting OFF Pre-condition extended(85 02) ,0x85,0x02,0xC5,  ,Physical
TC_ID-030 , PreCondition: PC_ID-003  Testcase:Sub function not supported(not valid sub function),0x85,0x08,0x12,  ,Physical
TC_ID-032 , PreCondition: PC_ID-003  Testcase:Sub function not supported(not valid sub function),0x85,0x0A,0x12,  ,Physical
TC_ID-034 , Read DTC with Extended session(19 01) ,0x19,0x01,0x59,  ,Physical
TC_ID-035 , Read DTC Extended session(19 02) ,0x19,0x02,0x59,  ,Physical
TC_ID-037 , Subfunction not supported(No Mask),0x19,0x0F,0x12,  ,Physical
TC_ID-038 , Subfunction not supported(properMask improper record),0x19,0x0F,0x12,  ,Physical
TC_ID-039 , Subfunction not supported(properMask improper record with 0xFF),0x19,0xFF ,0x12,  ,Physical
TC_ID-043 , Fault memory clear Extended session(0x14 0xFFFFFF) ,0x14,0xFFFFFF,0x54,  ,Physical
TC_ID-044 , Conditions not correct(invalid range)(0x14 0xFFEEEE) ,0x14,0xFFEEEE,0x22,  ,Physical
TC_ID-045 , Request out of range(Empty Group of DTC),0x14,  ,0x13,  ,Physical
PC_ID-004 , Start default session,0x10,0x01,0x50,  ,Physical
TC_ID-046 , PreCondition: PC_ID-004  Testcase:RX_SWIN_F1_EF_Read(Defaultsession),0x22,0xF1EF,0x62,  ,Physical
TC_ID-047 , PreCondition: PC_ID-004  Testcase:B_CAN_Database_Version_F1_00_Read(Defaultsession),0x22,0xF100,0x62,  ,Physical
TC_ID-048 , PreCondition: PC_ID-004  Testcase:Vehicle_Manufacturer_Spare_Part_Number_F1_87_Read(Defaultsession),0x22,0xF187,0x62,  ,Physical
TC_ID-049 , PreCondition: PC_ID-004  Testcase:Manufacturing_F1_8B_Read(Defaultsession),0x22,0xF18B,0x62,  ,Physical
TC_ID-050 , PreCondition: PC_ID-004  Testcase:ECU_Serial_Number_F1_8C_Read(Defaultsession),0x22,0xF18C,0x62,  ,Physical
TC_ID-051 , PreCondition: PC_ID-004  Testcase:Vehicle_Manufacturer_ECU_HW_Number_F1_91_Read(Defaultsession),0x22,0xF191,0x62,  ,Physical
TC_ID-052 , PreCondition: PC_ID-004  Testcase:HardwareVersionNumber_F1_93_Read(Defaultsession),0x22,0xF193,0x62,  ,Physical
TC_ID-053 , PreCondition: PC_ID-004  Testcase:ECUSoftwareUnit1IVDDataIdentifier_F1_C1_Read(Defaultsession),0x22,0xF1C1,0x62,  ,Physical
TC_ID-054 , PreCondition: PC_ID-004  Testcase:SystemSupplierECUSoftwareVersionNumbe_DataIdentifier_F1_95_Read(Defaultsession),0x22,0xF195,0x62,  ,Physical
TC_ID-055 , PreCondition: PC_ID-004  Testcase:Software_Version_for_HKMC_Vehicle_Manufacture_F1_A0_Read(Defaultsession),0x22,0xF1A0,0x62,  ,Physical
TC_ID-056 , PreCondition: PC_ID-004  Testcase:ECU_Supplier_Code_F1_A1_Read(Defaultsession),0x22,0xF1A1,0x62,  ,Physical
TC_ID-057 , PreCondition: PC_ID-004  Testcase:ECU_Software_UNIT_number_F1_B0_Read(Defaultsession),0x22,0xF1B0,0x62,  ,Physical
TC_ID-058 , PreCondition: PC_ID-004  Testcase:ECU_Software_UNIT1_Version_F1_B1_Read(Defaultsession),0x22,0xF1B1,0x62,  ,Physical
TC_ID-059 , PreCondition: PC_ID-004  Testcase:S_W_Version_Dataidentifier_F1_DD_Read(Defaultsession),0x22,0xF1DD,0x62,  ,Physical
TC_ID-060 , PreCondition: PC_ID-004  Testcase:SystemNameOrEngineTypeDataIdentifier_Read(Defaultsession),0x22,0xF197,0x62,  ,Physical
PC_ID-005 , Start Extended session,0x10,0x03,0x50,  ,Physical
TC_ID-061 , PreCondition: PC_ID-005  Testcase:RX_SWIN_F1_EF_Read(Extended session),0x22,0xF1EF,0x62,  ,Physical
TC_ID-062 , PreCondition: PC_ID-005  Testcase:B_CAN_Database_Version_F1_00_Read(Extendedsession),0x22,0xF100,0x62,  ,Physical
TC_ID-063 , PreCondition: PC_ID-005  Testcase:Vehicle_Manufacturer_Spare_Part_Number_F1_87_Read(Extendedsession),0x22,0xF187,0x62,  ,Physical
TC_ID-064 , PreCondition: PC_ID-005  Testcase:Manufacturing_F1_8B_Read(Extendedsession),0x22,0xF18B,0x62,  ,Physical
TC_ID-065 , PreCondition: PC_ID-005  Testcase:ECU_Serial_Number_F1_8C_Read(Extendedsession),0x22,0xF18C,0x62,  ,Physical
TC_ID-066 , PreCondition: PC_ID-005  Testcase:Vehicle_Manufacturer_ECU_HW_Number_F1_91_Read(Extendedsession),0x22,0xF191,0x62,  ,Physical
TC_ID-067 , PreCondition: PC_ID-005  Testcase:HardwareVersionNumber_F1_93_Read(Extendedsession),0x22,0xF193,0x62,  ,Physical
TC_ID-068 , PreCondition: PC_ID-005  Testcase:ECUSoftwareUnit1IVDDataIdentifier_F1_C1_Read(Extendedsession),0x22,0xF1C1,0x62,  ,Physical
TC_ID-069 , PreCondition: PC_ID-005  Testcase:SystemSupplierECUSoftwareVersionNumbe_DataIdentifier_F1_95_Read(Extendedsession),0x22,0xF195,0x62,  ,Physical
TC_ID-070 , PreCondition: PC_ID-005  Testcase:Software_Version_for_HKMC_Vehicle_Manufacture_F1_A0_Read(Extendedsession),0x22,0xF1A0,0x62,  ,Physical
TC_ID-071 , PreCondition: PC_ID-005  Testcase:ECU_Supplier_Code_F1_A1_Read(Extendedsession),0x22,0xF1A1,0x62,  ,Physical
TC_ID-072 , PreCondition: PC_ID-005  Testcase:ECU_Software_UNIT_number_F1_B0_Read(Extendedsession),0x22,0xF1B0,0x62,  ,Physical
TC_ID-073 , PreCondition: PC_ID-005  Testcase:ECU_Software_UNIT1_Version_F1_B1_Read(Extendedsession),0x22,0xF1B1,0x62,  ,Physical
TC_ID-074 , PreCondition: PC_ID-005  Testcase:S_W_Version_Dataidentifier_F1_DD_Read(Extendedsession),0x22,0xF1DD,0x62,  ,Physical
TC_ID-075 , PreCondition: PC_ID-005  Testcase:SystemNameOrEngineTypeDataIdentifier_Read(Extendedsession),0x22,0xF197,0x62,  ,Physical
TC_ID-076 , Request out of range(invalid identifier),0x22,0xF1FF,0x31,  ,Physical
TC_ID-080 , Incorrect message length,0x22,  ,0x13,  ,Physical
PC_ID-006 , Start default session,0x10,0x01,0x50,  ,Physical
TC_ID-081 , PreCondition: PC_ID-006  Testcase:Tester present,0x3E,0x00,0x7E,  ,Physical
TC_ID-082 , PreCondition: PC_ID-006  Testcase:Sub function not supported(with wrong sub function),0x3E,0xFF,0x12,  ,Physical
PC_ID-007 , Start Extended session,0x10,0x03,0x50,  ,Physical
TC_ID-083 , PreCondition: PC_ID-007  Tester present,0x3E,0x00,0x7E,  ,Physical
TC_ID-084 , PreCondition: PC_ID-007  Sub function not supported(with wrong sub function),0x3E,0xFF,0x12,  ,Physical
PC_ID-009 , Start Extended session,0x10,0x03,0x50,  ,Physical
PC_ID-010 , RequestSeed_ASK_Request,0x27,0x11,0x67,  ,Physical
PC_ID-011 , SendKey_ASK_Send,0x27,0x12,0x67,  ,Physical
TC_ID-087 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECU_Supplier_Code_F1_A1_Write,0x2E,0xF1A1,0x6E,61 38 31 32 ,Physical
TC_ID-088 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Manufacturing_F1_8B_Write,0x2E,0xF18B ,0x6E,00 00 00 00 ,Physical
TC_ID-089 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECU_Serial_Number_F1_8C_Write,0x2E,0xF18C ,0x6E,61 38 31 31 32 33 34 35 37 39 31 32 33 34 35 37 39 61 38 31 31 32 33 34 35 37 39 31 32 33 34 35,Physical
TC_ID-090 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Vehicle_Manufacturer_Spare_Part_Number_F1_87_Write,0x2E,0xF187 ,0x6E,39 36 35 34 30 44 59 30 30 30,Physical
TC_ID-091 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Vehicle_Manufacturer_ECU_HW_Number_F1_91_Write,0x2E,0xF191 ,0x6E,30 31 2E 30 30,Physical
TC_ID-092 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:HardwareVersionNumber_F1_93_Write,0x2E,0xF193 ,0x6E,30 31 2E 30 30 ,Physical
TC_ID-093 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECUSoftwareUnit1IVDDataIdentifier_F1_C1_Write,0x2E,0xF1C1,0x6E,61 38 31 31 32 33 34 35 37 39 31 32 33 34 35 37 39 61 38 31 31 32 33 34 35 37 39 31 32 33 34 35,Physical
TC_ID-094 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:SystemSupplierECUSoftwareVersionNumbe_DataIdentifier_F1_95_Write,0x2E,0xF195,0x6E,30 31 2E 30 30,Physical
TC_ID-095 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:SystemNameOrEngineTypeDataIdentifier_Write,0x2E,0xF197,0x6E,4D 4B 42 44 4D 4B 42 44,Physical
TC_ID-096 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECU_Supplier_Code_F1_A1_Write(invalid length given less then Expeccted),0x2E,0xF1A1,0x13,61 38 31 32 61 38 31 32,Physical
TC_ID-097 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Manufacturing_F1_8B_Write(invalid length given less then Expeccted),0x2E,0xF18B,0x13,00 00 00 00 00 00 00,Physical
TC_ID-098 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECU_Serial_Number_F1_8C_Write(invalid length given less then Expeccted),0x2E,0xF18C,0x13,61 38 31 31 32 33 34 ,Physical
TC_ID-099 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Vehicle_Manufacturer_Spare_Part_Number_F1_87_Write(invalid length given less then Expeccted),0x2E,0xF187,0x13,39 36 35 34 30 44 ,Physical
TC_ID-100 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Vehicle_Manufacturer_ECU_HW_Number_F1_91_Write(invalid length given less then Expeccted),0x2E,0xF191,0x13,30 31 2E,Physical
TC_ID-101 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:HardwareVersionNumber_F1_93_Write(invalid length given less then Expeccted),0x2E,0xF193,0x13,30 31,Physical
TC_ID-102 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECUSoftwareUnit1IVDDataIdentifier_F1_C1_Write(invalid length given less then Expeccted),0x2E,0xF1C1,0x13,A6 32 F7 CD 4D F6 CD A6 04 EB 7E 3A 2E 85 0A 39,Physical
TC_ID-103 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:SystemSupplierECUSoftwareVersionNumbe_DataIdentifier_F1_95_Write(invalid length given less then Expeccted),0x2E,0xF195,0x13,30 31,Physical
TC_ID-104 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:SystemNameOrEngineTypeDataIdentifier_Write(invalid length given less then Expeccted),0x2E,0xF197,0x13,4D 4B 42 44,Physical
TC_ID-105 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECU_Supplier_Code_F1_A1_Write(invalid length given more then Expeccted),0x2E,0xF1A1,0x13,61 38 31 32 61 38 31 32,Physical
TC_ID-106 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Manufacturing_F1_8B_Write(invalid length given more then Expeccted),0x2E,0xF18B,0x13,00 00 00 00 00 00 00,Physical
TC_ID-107 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECU_Serial_Number_F1_8C_Write(invalid length given more then Expeccted),0x2E,0xF18C,0x13,61 38 31 31 32 33 34 35 37 39 31 32 33 34 35 37 39,Physical
TC_ID-108 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Vehicle_Manufacturer_Spare_Part_Number_F1_87_Write(invalid length given more then Expeccted),0x2E,0xF187,0x13,39 36 35 34 30 44 59 30 30 30 36 35 34 30,Physical
TC_ID-109 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:Vehicle_Manufacturer_ECU_HW_Number_F1_91_Write(invalid length given more then Expeccted),0x2E,0xF191,0x13,30 31 2E 30 30 30 31 2E 30 30,Physical
TC_ID-110 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:HardwareVersionNumber_F1_93_Write(invalid length given more then Expeccted),0x2E,0xF193,0x13,30 31 2E 30 30 2E 30 30,Physical
TC_ID-111 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:ECUSoftwareUnit1IVDDataIdentifier_F1_C1_Write(invalid length given more then Expeccted),0x2E,0xF1C1,0x13,A6 32 F7 CD 4D F6 CD A6 04 EB 7E 3A 2E 85 0A 39  A6 32 F7,Physical
TC_ID-112 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:SystemSupplierECUSoftwareVersionNumbe_DataIdentifier_F1_95_Write(invalid length given more then Expeccted),0x2E,0xF195,0x13,30 31 2E 30 30,Physical
TC_ID-113 , PreCondition: PC_ID-009 PC_ID-010 PC_ID-011  Testcase:SystemNameOrEngineTypeDataIdentifier_Write(invalid length given more then Expeccted),0x2E,0xF197,0x13,4D 4B 42 44 4D 4B 42 44,Physical
PC_ID-012 , Start default session,0x10,0x01,0x50,  ,Physical
PC_ID-013 , RequestSeed_ASK_Request,0x27,0x11,0x7F,  ,Physical
PC_ID-014 , SendKey_ASK_Send,0x27,0x12,0x7F,  ,Physical
TC_ID-114 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:ECU_Supplier_Code_F1_A1_Write(invalid session_security denied),0x2E,0xF1A1,0x33,61 38 31 32 61 38 31 32,Physical
TC_ID-115 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:Manufacturing_F1_8B_Write(invalid session_security denied),0x2E,0xF18B,0x33,00 00 00 00 00 00 00,Physical
TC_ID-116 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:ECU_Serial_Number_F1_8C_Write(invalid session_security denied),0x2E,0xF18C,0x33,61 38 31 31 32 33 34 35 37 39 31 32 33 34 35 37 39,Physical
TC_ID-117 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:Vehicle_Manufacturer_Spare_Part_Number_F1_87_Write(invalid session_security denied),0x2E,0xF187,0x33,39 36 35 34 30 44 59 30 30 30 36 35 34 30,Physical
TC_ID-118 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:Vehicle_Manufacturer_ECU_HW_Number_F1_91_Write(invalid session_security denied),0x2E,0xF191,0x33,30 31 2E 30 30 30 31 2E 30 30,Physical
TC_ID-119 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:HardwareVersionNumber_F1_93_Write(invalid session_security denied),0x2E,0xF193,0x33,30 31 2E 30 30 2E 30 30,Physical
TC_ID-120 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:ECUSoftwareUnit1IVDDataIdentifier_F1_C1_Write(invalid session_security denied),0x2E,0xF1C1,0x33,A6 32 F7 CD 4D F6 CD A6 04 EB 7E 3A 2E 85 0A 39  A6 32 F7,Physical
TC_ID-121 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:SystemSupplierECUSoftwareVersionNumbe_DataIdentifier_F1_95_Write(invalid session_security denied),0x2E,0xF195,0x33,30 31 2E 30 30,Physical
TC_ID-122 , PreCondition: PC_ID-012 PC_ID-013 PC_ID-014  Testcase:SystemNameOrEngineTypeDataIdentifier_Write(invalid session_security denied),0x2E,0xF197,0x33,4D 4B 42 44 4D 4B 42 44,Physical
PC_ID-015 , Start Extended session,0x10,0x03,0x50,  ,Physical
PC_ID-016 , RequestSeed_ASK_Request,0x27,0x11,0x67,  ,Physical
PC_ID-017 , SendKey_ASK_Send,0x27,0x13,0x12,  ,Physical
TC_ID-123 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:ECU_Supplier_Code_F1_A1_Write(invalid security),0x2E,0xF1A1,0x33,61 38 31 32 61 38 31 32,Physical
TC_ID-124 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:Manufacturing_F1_8B_Write(invalid security),0x2E,0xF18B,0x33,00 00 00 00 00 00 00,Physical
TC_ID-125 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:ECU_Serial_Number_F1_8C_Write(invalid security),0x2E,0xF18C,0x33,61 38 31 31 32 33 34 35 37 39 31 32 33 34 35 37 39,Physical
TC_ID-126 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:Vehicle_Manufacturer_Spare_Part_Number_F1_87_Write(invalid security),0x2E,0xF187,0x33,39 36 35 34 30 44 59 30 30 30 36 35 34 30,Physical
TC_ID-127 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:Vehicle_Manufacturer_ECU_HW_Number_F1_91_Write(invalid security),0x2E,0xF191,0x33,30 31 2E 30 30 30 31 2E 30 30,Physical
TC_ID-128 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:HardwareVersionNumber_F1_93_Write(invalid security),0x2E,0xF193,0x33,30 31 2E 30 30 2E 30 30,Physical
TC_ID-129 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:ECUSoftwareUnit1IVDDataIdentifier_F1_C1_Write(invalid security),0x2E,0xF1C1,0x33,A6 32 F7 CD 4D F6 CD A6 04 EB 7E 3A 2E 85 0A 39  A6 32 F7,Physical
TC_ID-130 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:SystemSupplierECUSoftwareVersionNumbe_DataIdentifier_F1_95_Write(invalid security),0x2E,0xF195,0x33,30 31 2E 30 30,Physical
TC_ID-131 , PreCondition: PC_ID-015 PC_ID-016 PC_ID-017  Testcase:SystemNameOrEngineTypeDataIdentifier_Write(invalid security),0x2E,0xF197,0x33,4D 4B 42 44 4D 4B 42 44,Physical
PC_ID-018 , Start Default session,0x10,0x01,0x50,  ,Physical
PC_ID-020 , Start Extended session,0x10,0x03,0x50,  ,Physical
TC_ID-136 , PreCondition: PC_ID-020  Testcase:RequestSeed_ASK_Request,0x27,0x11,0x67,  ,Physical
TC_ID-137 , PreCondition: PC_ID-020  Testcase:SendKey_ASK_Send,0x27,0x12,0x67,  ,Physical
