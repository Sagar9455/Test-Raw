def generate_html_report(messages_by_tc, output_path, asc_filename, start_ts, end_ts, ecu_info_data=None, target_ecu=None):
    import datetime
    from html import escape

    total = len(messages_by_tc)
    passed = sum(1 for tc in messages_by_tc.values() if all(msg["status"] == "Pass" for msg in tc))
    failed = total - passed
    duration = end_ts - start_ts
    generated_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    html = f"""<html><head><title>UDS Diagnostic Report</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {{ font-family: Arial; margin: 20px; }}
        .pass {{ color: green; font-weight: bold; }}
        .fail {{ color: red; font-weight: bold; }}
        summary {{ font-weight: bold; cursor: pointer; }}
        table {{ border-collapse: collapse; width: 100%; margin-top: 10px; }}
        th, td {{ border: 1px solid #ccc; padding: 8px; }}
        th {{ background: #f0f0f0; }}
        #chart-container {{ width: 300px; margin: 20px auto; }}
        .info-block {{ text-align: center; margin-bottom: 30px; }}
    </style></head><body>

    <div style="text-align: center;">
        <h1>UDS Diagnostic Report</h1>
    </div>

    <div class="info-block">
        <div><strong>Generated:</strong> {generated_time}</div>
        <div><strong>CAN Log File:</strong> {asc_filename}</div>
        <div><strong>Total Test Cases:</strong> {total}</div>
        <div class="pass">Passed: {passed}</div>
        <div class="fail">Failed: {failed}</div>
        <div><strong>Test Duration:</strong> {duration:.3f} seconds</div>
    """

    # ✅ Append optional ECU info
    if target_ecu:
        html += f"<div><strong>Target ECU:</strong> {escape(target_ecu)}</div>"
    if ecu_info_data:
        for key, value in ecu_info_data.items():
            html += f"<div><strong>{escape(key)}:</strong> {escape(value)}</div>"

    html += "</div>"  # close info-block

    # ✅ Chart container
    html += f"""
    <div id="chart-container"><canvas id="passFailChart"></canvas></div>

    <script>
        const ctx = document.getElementById('passFailChart').getContext('2d');
        new Chart(ctx, {{
            type: 'pie',
            data: {{
                labels: ['Passed', 'Failed'],
                datasets: [{{
                    data: [{passed}, {failed}],
                    backgroundColor: ['#4CAF50', '#F44336']
                }}]
            }},
            options: {{
                responsive: true,
                plugins: {{
                    legend: {{ position: 'bottom' }},
                    title: {{ display: true, text: 'Test Case Results' }}
                }}
            }}
        }});
    </script>
    <hr><br>
    """

    # ✅ Per Test Case Details
    for tc_id, steps in messages_by_tc.items():
        status = steps[0]['status']
        status_class = 'pass' if status == 'Pass' else 'fail'
        html += f"<details><summary>{tc_id} - <span class='{status_class}'>{status}</span></summary>\n"
        html += """<table><tr><th>Step</th><th>Description</th><th>Timestamp</th><th>Type</th><th>Status</th><th>Failure Reason</th></tr>\n"""
        step_count = 1
        for msg in steps:
            html += f"<tr><td>{step_count}</td><td>{escape(msg['desc'])}</td><td>{msg['timestamp']:.6f}</td><td>Request Sent</td><td></td><td>-</td></tr>\n"
            step_count += 1
            response = msg.get("response", {})
            html += f"<tr><td>{step_count}</td><td></td><td>{response.get('timestamp', ''):.6f}</td><td>Response Received</td><td>{msg['status']}</td><td>{msg.get('failure_reason', '')}</td></tr>\n"
            step_count += 1
        html += "</table></details>\n"

    html += "</body></html>"

    with open(output_path, "w", encoding="utf-8") as f:
        f.write(html)

    print(f"✅ UDS HTML Report generated at:\n{output_path}\n")
